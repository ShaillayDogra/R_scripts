

setwd("D:/NESTLE-EPIGEN/MICRIBIOTA/MAY-DATA/NESTLE/TAXA")


## source("http://bioconductor.org/biocLite.R")
## biocLite()
## biocLite("randomForest")
## biocLite("Boruta")



library("randomForest")
library("Boruta")



## DAY-3 DATA
data <- read.table("RDG-Genus-V456-SampleQCed-data-Month6-relative-percent.txt", header=TRUE, sep="\t", row.names=1)
phenodata <- read.table("RDG-Genus-V456-SampleQCed-pheno-Month6.txt", header=TRUE, sep="\t")


####
dim(data)
data[1:5, 1:5]
phenodata[1:5, 1:5]
### TRANSPOSE
tdata <- t(data)
tdata[1:5, 1:5]


## FEED-TYPE
list <- which(colnames(phenodata) %in% c("Month6typeoffeeds"))
pheno <- phenodata[,list[1]]


## DATA FOR RANDOM-FOREST
dataRF <- cbind(tdata, as.character(pheno))

##write.table(dataRF, "RFtrial.txt", sep="\t", row.names = T, col.names=T)


## HACK FOR NOW
dataRF <- read.table("RFtrial.txt", header=TRUE, sep="\t", row.names=1)

n <- ncol(dataRF)


randomForest(pheno ~ ., data=dataRF, importance=T, proximity=T, na.action=na.omit, ntree=500, mtry=10, replace=T)


####
#### OPTIMIZE PARAMETER SPACE
#### TABLE OF MODELING ACCURACY WITH PARAMETER_CHANGE
####

data.rf <- randomForest(pheno ~ ., data=dataRF, importance=T, proximity=T, na.action=na.omit, ntree=500, mtry=10, replace=T, localImp=T, norm.votes=T, do.trace=T, keep.forest=T, keep.inbag=T)

treesize(data.rf, terminal=TRUE)
hist(treesize(data.rf))

plot(data.rf)


round(importance(data.rf), 2)

varImpPlot(data.rf, sort=TRUE, main="Variable Importance of each Bacteria Genus in Predicting FeedType")

plot(margin(data.rf))

MDSplot(data.rf, dataRF$pheno)


#data.p <- classCenter(dataRF[,-n], dataRF[,n], data.rf$prox)
#x1 <- dataRF$Actinobacteria_Bifidobacterium
#y1 <- dataRF$Gammaproteobacteria_Klebsiella
#plot(x, y, pch=21, bg=c("red", "blue", "green")[as.numeric(factor(dataRF$pheno))], main="Top Bacteria with Feedtype")


plot(outlier(data.rf), type="h", col=c("red", "green", "blue")[as.numeric(dataRF$pheno)])


data.mds <- cmdscale(1 - data.rf$proximity, eig=TRUE)
op <- par(pty="s")
pairs(cbind(dataRF[,1:2], data.mds$points), cex=0.6, gap=0,       
      col=c("red", "green", "blue")[as.numeric(factor(dataRF$pheno))],
      main="Month6 Data- Predictors and MDS of Proximity Based on RandomForest")
par(op)





## x=dataRF[,-n]
## y=dataRF[,n] 
## mtry=if (!is.null(y) && !is.factor(y)) max(floor(ncol(x)/3), 1) else floor(sqrt(ncol(x)))




